/// Blockquotes
///
/// @author [@esr360](http://twitter.com/esr360)
/// @access public
/// @group elements
///
/// @param {map} $custom - where custom config will be passed
/// @outputs all blockquote styles
///
/// @example
///     @include blockquotes((
///         'font'      : 'Times New Roman',
///         'icon-size' : 24px
///     ));
@mixin blockquotes($custom: ()) {

    //*************************************************************
    // Configuration
    //*************************************************************

    $blockquotes: config((
        'name'                  : 'blockquote',
        'font-family'           : Georgia,
        'icon-size'             : 4rem,
        'left-icon'             : true,
        'right-icon'            : false,
        'icon':(
            'size'              : 4rem,
            'quote'             : open-quote,
            'position'          : (left, top)
        ),
        'pull':(
            'width'             : 340px,
            'max-width'         : 50%,
            'margin'            : 1em
        )
    ), $custom);

    //*************************************************************
    // Module
    //*************************************************************

    @include module {

        //*********************************************************
        // Core Styles
        //*********************************************************
            
        margin: 0;
        border: 0;
        padding: 0 2.5em;
        position: relative;
        quotes: '\201C''\201D''\2018''\2019';
        font-family: this('font-family'), serif;

        &:before, &:after {
            font-size: this('icon-size');
            line-height: 1;
            position: absolute;
        }

        //@include option(this(''));

        &:before {
            @include blockquote_icon(open-quote, (left, top));
        }

        &:after {
            @include blockquote_icon(close-quote, (right, bottom));
        }

        //*********************************************************
        // Modifiers
        //*********************************************************
        
        @include modifiers(('pull-left', 'pull-right')) {

            margin: this('pull', 'margin');

            @media (min-width: breakpoint('break-2')) {
                width: this('pull', 'width');
                max-width: this('pull', 'max-width');
                text-align: left;
            }

            @include modifier('top') {
                margin-top: 0;
            }

            @include modifier('bottom') {
                margin-bottom: 0;
            }

        }
        
        @include modifier('pull-left') {
            float: left;
            margin-left: 0;
        }
        
        @include modifier('pull-right') {
            float: right;
            margin-right: 0;
        }
        
        @include modifier('callout') {
            padding: 0.75em;
            font-size: font-size('size-4');
            font-style: italic;
            border-left: 7px solid color('brand', 'brand-2');
            &:before { display:none }
        }

    } // module

} // @mixin blockquotes


/// Output the stylistic icon for a blockquote
///
/// @author [@esr360](http://twitter.com/esr360)
/// @group modules
/// @param {(open-quote|close-quote)} $quote [open-quote] - the quote to use as the icon
/// @param {list} $position [(left, top)] - the desired icon position
/// @outputs styles for a blockquote quotation mark icon
@mixin blockquote_icon($quote: open-quote, $position: (left, top)) {
    content: $quote;
    @if      nth($position, 1) == left   { left: 0;   } 
    @else if nth($position, 1) == right  { right: 0;  }
    @if      nth($position, 1) == top    { top: 0;    } 
    @else if nth($position, 1) == bottom { bottom: 0; }
}