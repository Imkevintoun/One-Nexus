////****************************************************************
/// One Nexus
/// modules\elements\buttons
///
/// @author Edmund Reed
/// @access public
/// @group elements
/// @param {Arglist} $custom - where custom config will be passed

/// @require {mixin} palettes
///
/// @example
/// @include buttons((
///     'color'  : blue,
///     'weight' : bold
/// ));
///****************************************************************

@mixin buttons($custom: ()) {

    ///************************************************************
    /// Configuration
    /// @type map
    /// @access private
    ///************************************************************

    $buttons: config((
        'name'             : 'button',
        'color'            : color('greyscale', 'white'),
        'background'       : color('greyscale', 'grey-4'),
        'transition'       : base('transition'),
        'side-padding'     : 1em,
        'line-height'      : 2.4,
        'weight'           : lighter,
        'border-width'     : 1px,
        'border-style'     : solid,
        'disabled-opacity' : 0.6,
        'round-radius'     : 0.4em,
        'group-spacing'    : 0.5em,
        'group-stack'      : 'break-1',
        'modifiers'        : ()
    ), $custom);

    ///************************************************************
    /// Module
    ///************************************************************
     
    @include module {

        ///********************************************************
        /// Core Styles
        ///********************************************************
        
        // Private styles 
        display: inline-block;
        vertical-align: middle;
        border-color: transparent;
        cursor: pointer;
        text-decoration: none;

        // Public styles
        color: this('color');
        background: this('background');
        transition: this('transition');
        padding-left: this('side-padding');
        padding-right: this('side-padding');
        line-height: this('line-height');
        font-weight: this('weight');
        border-width: this('border-width');
        border-style: this('border-style');

        // Default modifiers
        @include extend(this('modifiers'));

        /// Pseudo States
        ///********************************************************

        &:hover {
            text-decoration: none;
            background: darken(this('background'), 10%);
            color: this('color');
        }
        
        &:focus {
            outline: 0;
        }

        ///********************************************************
        /// Sizes
        ///********************************************************

        @include font-sizes((
            'breakpoints' : (
                'break-3' : 0.85
            )
        ));

        ///********************************************************
        /// Colors
        ///********************************************************

        /// Brand Colors
        @each $brand, $color in palette('brand') {
            @include modifier($brand) {
                background: $color;
                &:hover { background: darken($color, 10%) }
                @include modifier('border') {
                    color: $color;
                    &:hover {
                        background: $color;
                        color: color('greyscale', 'white');
                    }
                }
            }
        }

        /// Greyscale Colors
        @each $greyscale, $color in palette('greyscale') {
            @include modifier($greyscale) {
                background: $color;
                @if (lightness($color) > 50) { 
                    color: color('brand', 'primary'); 
                }
                &:hover { background: darken($color, 10%) }
                @include modifier('border') {
                    color: $color;
                    &:hover {
                        background: $color;
                        @if (lightness($color) > 80) {
                            color: color('brand', 'primary');
                        } @else {
                            color: color('greyscale', 'white');
                        }
                    }
                }
            }
        }
        
        /// Alert Colors
        @each $name, $color in palette('alert') {
            @include modifier($name) {
                background: $color;
                &:hover { background: darken($color, 10%) }
            }
        }
        
        /// Social Colors   
        @each $social, $color in option($palettes, 'social') {
            @include modifier($social) {
                background: $color;
                &:hover { background: darken($color, 10%) }
            }
        }

        ///********************************************************
        /// Modifiers
        ///********************************************************

        @include modifier('block') {
            width: 100%;
            text-align: center;
            & + & {
                margin-top: (base('margin') / 2);
            }
        } 

        @include modifier('border') {
            background: none;
            color: base('text-color');
            border-color: currentColor;
            &:hover {
                color: color('greyscale', 'white');
                background: color('brand', 'primary');
                border-color: color('brand', 'primary');
            }
        }
        
        @include modifier('pill') {
            display: table-cell;
            @include modifier('round') {
                border-radius: 0;
                &:first-child {
                    border-radius: this('round-radius') 0 0 this('round-radius');
                }
                &:last-child {
                    border-radius: 0 this('round-radius') this('round-radius') 0;
                }
            }
        }

        @include modifier('disabled') {
            opacity: this('disabled-opacity');
            cursor: not-allowed;
            transition-delay: 999s;
        }

        @include modifier('round') {
            border-radius: this('round-radius');
        }

        @include modifiers(('oval', 'circle')) {
            border-radius: 1.5em;
        }

        @include modifier('sharp') {
            border-radius: 0;
        }
        
        @include modifier('icon') {
            padding: 0;
            width: 2.5em;
            text-align: center;
            .fa {
                width: 1em;
            }
            @include modifier('plain') {
                width: 1.5em;
            }
        }
        
        @include modifier('plain') {
            background: none;
            line-height: 1.25em;
        }
        
        @include modifier('active') {
            background: color('brand', 'primary');
            color: color('greyscale', 'white');
            &:hover {
                background: color('brand', 'primary');
            }
        }

        /// Custom Styles
        ///********************************************************

		@include modifier('primary') {
			@include extend(('round', 'size-4', 'brand-1'));
		}

		@include modifier('secondary') {
			@include extend(('sharp', 'size-4', 'brand-2'));
		}

        ///********************************************************
        /// Components
        ///********************************************************

        @include component('group') {
            @include overwrite('button') {
                margin-left: this('group-spacing');
                &:first-child {
                    margin-left: 0;
                }
            }
        }

    } // @include module

    ///************************************************************
    /// Hacks
    ///************************************************************

    /// Makes input & button elements equal height in Firefox
    input::-moz-focus-inner,
    button::-moz-focus-inner { 
        border: 0;
        padding: 0;
        margin-top: 1px; 
        margin-bottom: 1px;
    }

} // @mixin buttons