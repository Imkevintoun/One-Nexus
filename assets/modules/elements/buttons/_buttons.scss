/// Buttons
///
/// @author [@esr360](http://twitter.com/esr360)
/// @access public
/// @group elements
///
/// @param {map} $custom - where custom config will be passed
/// @outputs all button styles
///
/// @example
///     @include buttons((
///         'round-radius' : 4px,
///         'weight'       : bold
///     ));
@mixin buttons($custom: ()) {

    //*************************************************************
    // Configuration
    //*************************************************************

    $buttons: config((
        'name'             : 'button',
        'color'            : color('greyscale', 'white'),
        'background'       : color('greyscale', 'grey-4'),
        'transition'       : core('transition'),
        'side-padding'     : 1em,
        'line-height'      : 2.2,
        'font-weight'      : normal,
        'border-width'     : 1px,
        'border-style'     : solid,
        'disabled-opacity' : 0.6,
        'round-radius'     : 0.4em,
        'group-spacing'    : 0.5em,
        'group-stack'      : 'break-1',
        'palettes'         : (
            'brand', 'greyscale', 'alert', (
            'social': (
                'facebook', 'twitter'
            ))
        ),
        'modifiers'        : ()
    ), $custom);

    //*************************************************************
    // Module
    //*************************************************************
        
    @include module {

        //*********************************************************
        // Core Styles
        //*********************************************************
        
        // Private styles 
        display: inline-block;
        vertical-align: middle;
        border-color: transparent;
        cursor: pointer;
        text-decoration: none;
        padding-top: 0;
        padding-bottom: 0;

        // Public styles
        color: this('color');
        background: this('background');
        transition: this('transition');
        padding-left: this('side-padding');
        padding-right: this('side-padding');
        line-height: this('line-height');
        font-weight: this('font-weight');
        border-width: this('border-width');
        border-style: this('border-style');

        // Default modifiers
        @include extend(this('modifiers'));

        // Pseudo States
        //*********************************************************

        &:hover {
            text-decoration: none;
            background: darken(this('background'), 10%);
            color: this('color');
        }
        
        &:focus {
            outline: 0;
        }

        //*********************************************************
        // Sizes
        //*********************************************************

        @include font-sizes((
            'breakpoints' : (
                'break-3' : 0.85
            )
        ));

        //*********************************************************
        // Colors
        //*********************************************************

        @each $key, $color in merge-palettes(this('palettes')) {
            // Point at which light/dark background changes
            $threshold: 80;
            @include modifier($key) {
                background: $color;
                &:hover { 
                    background: darken($color, 10%);
                }
                @include modifier('border') {
                    color: $color;
                    &:hover {
                        background: $color;
                        border-color: $color;
                        @if is-grayscale($color) and (lightness($color) < $threshold) {
                            color: typography('colors', 'base');
                        } @else {
                            color: this('color');
                        }
                    }
                }
            }
        }

        //*********************************************************
        // Modifiers
        //*********************************************************

        @include modifier('block') {
            width: 100%;
            text-align: center;
            & + & {
                margin-top: (core('margin') / 2);
            }
        } 

        @include modifier('border') {
            background: none;
            color: this('background');
            border-color: currentColor;
            &:hover {
                color: color('greyscale', 'white');
                background: this('background');
                border-color: this('background');
            }
        }

        @include modifier('disabled') {
            opacity: this('disabled-opacity');
            cursor: not-allowed;
            transition-delay: 999s;
        }

        @include modifier('round') {
            border-radius: this('round-radius');
        }

        @include modifiers(('oval', 'circle')) {
            border-radius: 1.5em;
        }

        @include modifier('sharp') {
            border-radius: 0;
        }
        
        @include modifier('icon') {
            padding: 0;
            width: 2.5em;
            text-align: center;
            .fa {
                width: 1em;
            }
            @include modifier('plain') {
                width: 1.5em;
            }
        }
        
        @include modifier('plain') {
            background: none;
            line-height: 1.25em;
        }
        
        @include modifier('active') {
            background: color('brand', 'brand-1');
            color: color('greyscale', 'white');
            &:hover {
                background: color('brand', 'brand-1');
            }
        }

        // Custom Styles
        //*********************************************************

        @include modifier('primary') {
            @include extend(('round', 'size-4', 'brand-1'));
        }

        @include modifier('secondary') {
            @include extend(('sharp', 'size-4', 'brand-2'));
        }

        //*********************************************************
        // Components
        //*********************************************************

        @include component('group') {

            @include overwrite('button') {
                margin-left: this('group-spacing');
                &:first-child {
                    margin-left: 0;
                }
            }
        
            @include modifier('pills') {
                display: table;
                @include overwrite('button') {
                    display: table-cell;
                    margin-left: 0;
                    @include modifier('round') {
                        border-radius: 0;
                        &:first-child {
                            border-radius: this('round-radius') 0 0 this('round-radius');
                        }
                        &:last-child {
                            border-radius: 0 this('round-radius') this('round-radius') 0;
                        }
                    }
                }
            }

        }

    } // @include module

    //*************************************************************
    // Hacks
    //*************************************************************

    // Makes input & button elements equal height in Firefox
    input::-moz-focus-inner,
    button::-moz-focus-inner { 
        border: 0;
        padding: 0;
        margin-top: 1px; 
        margin-bottom: 1px;
    }

} // @mixin buttons