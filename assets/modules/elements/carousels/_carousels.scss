@import '../../modules/elements/carousels/carousels.json';
/// Carousels
///
/// @author [@esr360](http://twitter.com/esr360)
/// @access public
/// @group elements
///
/// @param {map} $custom - where custom config will be passed
@mixin carousels($custom: custom('carousels')) {

    // Configuration
    $carousels: config($carousels, $custom);

    //*************************************************************
    // Module
    //*************************************************************

    @include module {

        //*********************************************************
        // Components
        //*********************************************************

        @include component('slide') {
            width: 100%;
        }

        @include component('navigationItem') {
            height: this('nav-buttons', 'size');
            width: this('nav-buttons', 'size');
            transition: this('nav-buttons', 'transition');
            background-color: this('nav-buttons', 'background-color');
            color: this('nav-buttons', 'color');
            @if this('nav-buttons', 'shape') == 'circle' {
                border-radius: 50%;
            } @else if this('nav-buttons', 'shape') == 'square' {
                border-radius: 0;
            }
            @if this('nav-buttons', 'disabled') {
                display: none;
            }
            svg {
                @include horizontal-center();
                @include vertical-center(absolute);
                height: this('nav-buttons', 'arrow-size');
                width: this('nav-buttons', 'arrow-size');
            }
            .arrow {
                fill: this('nav-buttons', 'arrow-color');
            }
        }

        @include component('pagination') {
            bottom: auto;
            margin-top: this('bullets', 'gutter');
        }

        @include component('bullet') { 
            height: this('bullets', 'size');
            width: this('bullets', 'size');
            transition: this('nav-buttons', 'transition');
            background-color: this('bullets', 'color');
            @if this('bullets', 'disabled') {
                display: none;
            }
            &.is-selected {
                color: this('bullets', 'active-color');
            }
        }

        //*********************************************************
        // Modifiers
        //*********************************************************

        @include modifier('hide-pagination') {
            @include component('pagination') {
                visibility: hidden;
                opacity: 0;
            }
        }

        @include modifier('hide-navigation') {
            @include component('navigationItem') {
                display: none;
            }
        }

        //*********************************************************
        // Custom Content
        //*********************************************************

        @content;

    } // module

} // @mixin carousels
