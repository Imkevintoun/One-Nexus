/// Forms
///
/// @author [@esr360](http://twitter.com/esr360)
/// @access public
/// @group elements
///
/// @param {map} $custom - where custom config will be passed
/// @outputs all form styles
///
/// @example
///     @include forms((
///         'font'      : 'Times New Roman',
///         'icon-size' : 24px
///     ));
@mixin forms($custom: ()) {

    //*************************************************************
    // Configuration
    //*************************************************************

    $forms: config((
        'name'             : 'form',
        'output-json'      : true,
        'weight'           : lighter,
        'input-color'      : core('text-color'),
        'input-border'     : 1px solid color('greyscale', 'grey-3'),
        'input-padding'    : 0.65em,
        'bg-color'         : rgba(black, 0.025),
        'bg-focus-color'   : white,
        'valid-color'      : color('validation', 'valid'),
        'invalid-color'    : color('validation', 'invalid')
    ), $custom);

    //*************************************************************
    // Module
    //*************************************************************

    @include module {

        //*********************************************************
        // Core Styles
        //*********************************************************

        font-weight: this('weight');
        
        label {
            transition: core('transition');
            cursor: pointer;
        }

        //*********************************************************
        // Components
        //*********************************************************

        @include component('group') {
            position: relative;
            margin-bottom: (core('margin') / 2);
            @include vertical-rhythm('bottom');
            @include modifier('compound') {
                margin-bottom: 0.5em;
            }
            @include modifier('has-icon') {
                @include overwrite-component('input') {
                    padding-left: 2em;
                }
            }
        }

        @include component('icon') {
            @include vertical-center(absolute);
            position: absolute;
            left: 0.75em;
        }

        @include component('input') {
            display: block;
            width: 100%;
            padding: this('input-padding');
            border: this('input-border');
            transition: core('transition');
            color: this('input-color');
            &::placeholder {
                color: this('input-color');
                transition: core('transition');
            }
            &:focus {
                outline: 0;
            }
            @include modifier('validate') {
                &:focus {
                    &:invalid {
                        &, ~ label, ~ .form_icon, &::placeholder {
                            border-color: this('invalid-color');
                            color: this('invalid-color');
                        }
                    }
                    &:valid {
                        &, ~ label, ~ .form_icon, &::placeholder {
                            border-color: this('valid-color');
                            color: this('valid-color');
                        }
                    }
                }
            }
        }
        
    } // module

} // @mixin forms