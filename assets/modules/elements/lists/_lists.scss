/// Buttons
///
/// @author [@esr360](http://twitter.com/esr360)
/// @access public
/// @group elements
///
/// @param {map} $custom - where custom config will be passed
/// @outputs all button styles
///
/// @example
///     @include buttons((
///         'round-radius' : 4px,
///         'weight'       : bold
///     ));
@mixin lists($custom: ()) {

    //*************************************************************
    // Configuration
    //*************************************************************

    $lists: config((
        'name'               : 'list',
        'small-size'         : font-size('size-1'),
        'inline-spacing'     : 1em,
        'arrow-icon'         : "\f138",
        'arrow-color'        : color('brand', 'brand-1'),
        'tag-bg-color'       : color('greyscale', 'grey-4'),
        'tag-border-color'   : transparent,
        'tag-color'          : white,
        'tag-radius'         : 0,
        'tag-hover-bg-color' : color('brand', 'brand-1'),
        'tag-hover-color'    : white
    ), $custom);

    //*************************************************************
    // Module
    //*************************************************************

    @include module {

        //*********************************************************
        // Modifiers
        //*********************************************************

        @include modifier('reset') {
            padding-left: 0;
            list-style: none;
        }
        
        @include modifier('clear') {
            padding-left: 1em;
        }
        
        @include modifier('inline') {
            > li {
                display: inline-block;
                + li {
                    margin-left: this('inline-spacing');
                }
            }
        }
        
        @include modifier('divider') {
            > li {
                &:not(:last-child) {
                    padding-bottom: 1em;
                    margin-bottom: 1em;
                    border-bottom: 1px dotted rgba(black, 0.2);
                }
            }
        }
        
        @include modifier('arrow') {
            @include extend('reset');
            > li {
                position: relative;
                line-height: 1.7;
                margin-bottom: 0;
                padding-left: 1.5em;
                &:before {
                    @include vertical-center(absolute);
                    content: this('arrow-icon');
                    display: inline-block;
                    left: 0;
                    font-family: FontAwesome;
                    margin-right: 0.5em;
                    color: this('arrow-color');
                }
            }
            .text-right & {
                > li {
                    padding: 0.2em 1.5em 0.2em 0;
                    &:before {
                        left: auto;
                        right: 0;
                        margin-left: 0.5em;
                        margin-right: 0;
                        transform: rotate(180deg) translateY(50%);
                    }
                }
            }
        }
        
        @include modifier('group') {
            > li + li {
                margin-top: 1em;
            }
        }
        
    } // module

} // @mixin lists