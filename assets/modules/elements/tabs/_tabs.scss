@import '../../modules/elements/tabs/tabs.json';
/// Tabs
///
/// @author [@esr360](http://twitter.com/esr360)
/// @access public
/// @group elements
///
/// @param {map} $custom - where custom config will be passed
@mixin tabs($custom:  custom('tabs')) {

    // Configuration
    $tabs: config($tabs, $custom);

    //*************************************************************
    // Module
    //*************************************************************

    @include module {

        //*********************************************************
        // Components
        //*********************************************************
            
        @include component('nav') {
            
            @include extend($parent: 'list', $modifiers: 'reset');

            display: table;
            margin-bottom: 0;
            position: relative;
            z-index: 2;
            
            @include modifier('round') {
                @include component('item') {
                    &:first-child {
                        border-top-left-radius: this('navItem-radius');
                    }
                    &:last-child {
                        border-top-right-radius: this('navItem-radius');
                    }
                }
            }
            
            @include modifier('center') {
                margin-left: auto;
                margin-right: auto;
            }
            
            @include modifier('left') {
                margin-right: auto;
            }
            
            @include modifier('right') {
                margin-left: auto;
            }
            
            @include modifier('full') {
                width: 100%;
            }
            
            @include component('item') {
                color: this('navItem-color');
                padding: this('navItem-padding');
                background: this('navItem-background');
                border: 1px solid this('navItem-borderColor');
                transition: this('navItem-transition');
                display: table-cell;
                cursor: pointer;
                &.active {
                    color: this('navItem-active-color');
                    border-color: this('navItem-active-borderColor');
                    background: this('navItem-active-background');
                    + li {
                        border-left-color: this('navItem-active-borderColor');
                    }
                    &:hover {
                        color: this('navItem-active-color');
                    }
                }
                &:hover:not(.active) {
                    background: this('navItem-hover-background');
                }
                &:not(:last-child) {
                    border-right: none;
                }
                @include modifier('round') {
                    &:first-child {
                        border-radius: this('navItem-radius') 0 0 this('navItem-radius');
                    }
                    &:last-child {
                        border-radius: 0 this('navItem-radius') this('navItem-radius') 0;
                    }
                }
            }

        } // component(nav)
        
        @include component('content') {
            @include modifier('block') {
                background: this('contentBlock-background');
                color: this('contentBlock-color');
                padding: this('contentBlock-padding');
                border: 1px solid this('contentBlock-borderColor');
                position: relative;
                top: -1px;
                @include modifier('glue') {
                    $tabs-glue: this('contentBlock-glueHeight');
                    margin-top: $tabs-glue;
                    top: -2px;
                    z-index: 2;
                    &:before {
                        content: "";
                        position: absolute;
                        left: -1px;
                        top: -$tabs-glue;
                        height: $tabs-glue;
                        width: calc(100% + 2px);
                        border: 1px solid this('contentBlock-glueColor');
                        background: this('contentBlock-glueColor');
                    }
                }
            }
        }
        
        @include component('item') {
            display: none;
            &.active {
                display: block;
            }
        }

        //*********************************************************
        // Custom Content
        //*********************************************************

        @content;

    } // module

} // @mixin tabs