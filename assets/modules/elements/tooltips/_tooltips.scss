@import '../../modules/elements/tooltips/tooltips.json';
/// Tooltips
///
/// @author [@esr360](http://twitter.com/esr360)
/// @access public
/// @group elements
/// @see https://github.com/esr360/K-Tooltips
///
/// @param {map} $custom - where custom config will be passed
@mixin tooltips($custom: custom('tooltips')) {

    // Configuration
    $tooltips: config($tooltips, $custom);

    // Positions
    $tooltip-positions: ('top', 'bottom', 'left', 'right');

    //*************************************************************
    // Module
    //*************************************************************

    @include module {

        //*********************************************************
        // Core Styles
        //*********************************************************

        cursor: pointer;	
        position: relative;

        //*********************************************************
        // Components
        //*********************************************************

        @at-root .inline-tooltip {
            display: inline-block;
        }
        
        @include component('wrapper') {
            text-align: center;
        }

        @include component('content') {
            // Size & Appearance
            max-width: this('max-width');
            padding: this('padding');
            background: this('background');
            border-radius: this('border-radius');
            line-height: 1.75;
            position: absolute;
            display: inline-block;
            
            // Typography
            font-size: this('font-size');
            font-family: this('font-family');
            color: this('color');
            text-transform: this('text-transform');
            font-weight: this('font-weight');
            
            // Other
            transition: this('transition');
            z-index: this('z-index');
            white-space: nowrap;
            
            // Hide by default
            opacity: 0;
            visibility: hidden;
            
            // Show when parent component is hovered/touched
            [data-tooltip]:hover &,
            [data-tooltip]:active & {
                opacity: 1;
                visibility: visible;
            }
            
            // Direction Arrow
            @include triangle-core;
            
            // Inline-Tooltip styles
            .inline-tooltip & {
                white-space: nowrap;
            }
                
            // Positions
            @each $tooltip-position in $tooltip-positions {
                [class*="tooltip_wrapper"][class*="-#{$tooltip-position}"] & {
                    #{$tooltip-position}: this('distance');
                    @include triangle((
                        'core'     : false, 
                        'position' : #{$tooltip-position}, 
                        'color'    : this('arrow-color'),
                        'size'     : this('arrow-size')
                    ));
                    @if $tooltip-position == top {
                        transform: translateX(-50%) translateY(-100%);
                    } @else if $tooltip-position == bottom {
                        transform: translateX(-50%) translateY(100%);
                    } @else if $tooltip-position == left {
                        top: 50%;
                        transform: translateX(-100%) translateY(-50%);
                    } @else if $tooltip-position == right {
                        top: 50%;
                        transform: translateX(100%) translateY(-50%);
                    }
                }	
            }
        }

        //*********************************************************
        // Custom Content
        //*********************************************************

        @content;

    } // module

} // @mixin tooltips