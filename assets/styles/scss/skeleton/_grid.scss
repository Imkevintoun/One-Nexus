@if $flex == false {

/* Grid System
================================================================ */

.row { 
    // IE < 8 collapse white-space
    *letter-spacing: normal;
    *word-spacing: -0.43em;
	// Firefox/IE collapse white-space
    letter-spacing: -0.31em;
    // Webkit collapse white-space
	display: table;
	width: 100%;
	// for Owl-Carousel functionality
	table-layout: fixed;
}

.opera-only :-o-prefocus,
.row {
    word-spacing: -0.43em;
}

* {        
    letter-spacing: normal;
    word-spacing: normal;
    text-rendering: auto;
}

//-----------------------------------------------------------------
// Individual Column
//-----------------------------------------------------------------

[class*="span"] {
    display: inline-block;
    zoom: 1; *display: inline; // IE < 8: fake inline-block
    vertical-align: top;
	margin-left: $gutter;
	&:first-child {
		margin-left: 0;
	}
}

//-----------------------------------------------------------------
// Custom Column Grid
//-----------------------------------------------------------------

@for $i from 1 through $columns {
	.span-#{$i} {			
		width: ( (100/$columns) * $i) - ( ( ((100 / ((100/$columns) * $i)) - 1) * $gutter ) / ( $columns / $i ) )
	}
}

.row {

//-----------------------------------------------------------------
// Default Column Stacking
//-----------------------------------------------------------------

	@media (max-width: $col-collapse) {
		&:not([class*="break-"]) {
			> [class*="span"] {
				margin-left: 0;
				width: 100%;
			}
			&.block-columns {
				> [class*="span"] {
					display: inline-block;
				}
			}
		}
	}

//-----------------------------------------------------------------
// Custom Column Stacking
//-----------------------------------------------------------------

	@each $bp, $width in $breakpoints {
		@media (max-width: $width) {
			&.#{$bp} {
				[class*="span"] {
					margin-left: 0;
					width: 100%;
				}
				&.block-columns {
					> [class*="span"] {
						display: inline-block;
					}
				}
			}
		}
	} 	

//-----------------------------------------------------------------
// Flow Columns
//-----------------------------------------------------------------

	@media (min-width: $col-collapse) {
		&.flow-columns {
			margin-left: -$gutter;
			width: 100% + $gutter;
			[class*="span"] {
				&, &:first-child {
					margin-left: $gutter;
				}
			}
			@for $i from 1 through $columns {
				.span-#{$i} {		
					width: ((100/$columns) * $i) - $gutter;
				}
			}
		}
	}

//-----------------------------------------------------------------
// Magic Columns
//-----------------------------------------------------------------

	@media (min-width: $col-collapse) {
		.span-m {
			&:first-child {
				@for $i from 1 through $columns {
					&:nth-last-child(#{$i}) {
						&, ~ .span-m {		
							width: (100/$i) - ( ( ( (100 / (100/$i) ) - 1) * $gutter ) / $i );
						}
					}
				}
			}
		}
	}
	
//-----------------------------------------------------------------
// Adaptive Columns
//-----------------------------------------------------------------

	&.adaptive-columns {
		.span {
			width: 100%;
			margin-left: 0;
		}
	}

//-----------------------------------------------------------------
// Block Columns
//-----------------------------------------------------------------

	&.block-columns {
		> [class*="span"] {
			display: table-cell;
		}
	}


} // end .row

} // end if $flex